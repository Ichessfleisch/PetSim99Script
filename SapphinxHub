local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
   Name = "💎 Sapphinx Hub 💎",
   LoadingTitle = "loading Sapphinx Hub",
   LoadingSubtitle = "by Sappinx",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Sapphinx Hub"
   },
   Discord = {
      Enabled = true,
      Invite = "GyJSmm3EGE", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Sapphinx Hub | 🔑 Key System 🔑",
      Subtitle = "Key in Discord Server",
      Note = "Join the Discord server for a key",
      FileName = "sapphinxhubkey", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"4562","4562"} -- {"https://pastebin.com/raw/xvtUa0Zp"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})


local MainTab = Window:CreateTab("Main Scripts✔️", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main 👾")

local Button = MainTab:CreateButton({
   Name = "Trade Scam 🧾",
   Callback = function(txt)
  print(' ')
   end,
})

local Button = MainTab:CreateButton({
   Name = "Booth Scam 🧾",
   Callback = function(txt)
   print(' ')
  end,
})

local Input = MainTab:CreateInput({
   Name = "Visual Pet 😺",
   PlaceholderText = "YourPet/WantedPet",
   RemoveTextAfterFocusLost = false,
   Callback = function()
   print(' ')
   end,
})

local Input = MainTab:CreateInput({
   Name = "Booth Sniper Huges 🔫",
   PlaceholderText = "Gems Amount",
   RemoveTextAfterFocusLost = false,
   Callback = function(txt)
   print(' ')
   end,
})

local Input = MainTab:CreateInput({
   Name = "Booth Sniper Titanics 🔫",
   PlaceholderText = "Gems Amount",
   RemoveTextAfterFocusLost = false,
   Callback = function(txt)
   print(' ')
   end,
})

local DupeTab = Window:CreateTab("Dupe Scripts 🧾", nil) -- Title, Image

local Button = DupeTab:CreateButton({
   Name = "Gem Dupe 💎",
Callback = function(txt)
  print(' ')
   end,
})

local Button = DupeTab:CreateButton({
   Name = "Pet Dupe 🐾",
   Callback = function(txt)
  print(' ')
   end,
})

local Button = DupeTab:CreateButton({
   Name = "Mailbox Dupe 📫",
   Callback = function(txt)
   print(' ')
   end,
})


local FarmTab = Window:CreateTab("Auto Farm 🤖", nil) -- Title, Image

local Toggle = FarmTab:CreateToggle({
   Name = "Auto Farm 👾",
   CurrentValue = false,
   Flag = "ToggleFarm", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(txt)
   print(' ')
   end,
})

local Toggle = FarmTab:CreateToggle({
   Name = "Auto Rank ⚡",
   CurrentValue = false,
   Flag = "ToggleAutoRank", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(txt)
   print(' ')
   end,
})

local Toggle = FarmTab:CreateToggle({
   Name = "Auto Collect Lootbags 💰",
   CurrentValue = false,
   Flag = "ToggleLoot", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function()
   print(' ')
   end,
})

local Toggle = FarmTab:CreateToggle({
   Name = "Auto Fish 🎣",
   CurrentValue = false,
   Flag = "ToggleFish", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function()
   print(' ')
   end,
})

local Toggle = FarmTab:CreateToggle({
   Name = "Auto Digsite ⛰️",
   CurrentValue = false,
   Flag = "ToggleDig", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function()
   print(' ')
   end,
})

local Button = MainTab:CreateButton({
   Name = "Claw Token Script 🎫",
   Callback = function(txt)
  print(' ')
   end,
})

local OthersTab = Window:CreateTab("Others", nil) -- Title, Image

local Section = OthersTab:CreateSection("Others")

local Button = OthersTab:CreateButton({
   Name = "Copy Discord Link",
   Callback = function()
    setclipboard('discord.gg/BX9YcuaCT3')
   end,
})

